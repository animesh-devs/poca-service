{
  "info": {
    "name": "POCA Service API",
    "description": "A comprehensive collection for testing the POCA (Patient-Doctor Chat Assistant) service API",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Add user-entity-id header to all requests if it exists in the environment",
          "const userEntityId = pm.environment.get('userEntityId');",
          "const userRole = pm.environment.get('userRole');",
          "",
          "if (userEntityId) {",
          "    // Add or update the user-entity-id header",
          "    pm.request.headers.upsert({",
          "        key: 'user-entity-id',",
          "        value: userEntityId",
          "    });",
          "    console.log(`[${pm.info.requestName}] Added user-entity-id header: ${userEntityId} (Role: ${userRole || 'unknown'})`);",
          "} else {",
          "    console.warn(`[${pm.info.requestName}] No userEntityId found in environment. The user-entity-id header will not be added.`);",
          "    console.warn('Available environment variables:', Object.keys(pm.environment.toObject()).join(', '));",
          "}",
          "",
          "// Log all headers for debugging",
          "console.log(`[${pm.info.requestName}] Request headers:`, pm.request.headers.all().map(h => `${h.key}: ${h.value}`).join(', '));"
        ]
      }
    }
  ],
  "item": [
    {
      "name": "Health Checks",
      "item": [
        {
          "name": "Root",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}",
              "host": [
                "{{baseUrl}}"
              ],
              "protocol": "http"
            },
            "description": "Get API information"
          },
          "response": []
        },
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/health",
              "host": [
                "{{baseUrl}}"
              ],
              "protocol": "http",
              "path": [
                "health"
              ]
            },
            "description": "Check if the API is healthy"
          },
          "response": []
        }
      ],
      "description": "Basic health check endpoints"
    },
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// Check if the response is valid JSON",
                  "try {",
                  "    var jsonData = pm.response.json();",
                  "    console.log('Response data:', jsonData);",
                  "    ",
                  "    // Set environment variables if the response contains the expected fields",
                  "    if (jsonData.access_token) {",
                  "        pm.environment.set(\"authToken\", jsonData.access_token);",
                  "        console.log('Set authToken:', jsonData.access_token);",
                  "    } else {",
                  "        console.error('access_token not found in response');",
                  "    }",
                  "    ",
                  "    if (jsonData.refresh_token) {",
                  "        pm.environment.set(\"refreshToken\", jsonData.refresh_token);",
                  "        console.log('Set refreshToken:', jsonData.refresh_token);",
                  "    }",
                  "    ",
                  "    if (jsonData.user_id) {",
                  "        pm.environment.set(\"userId\", jsonData.user_id);",
                  "        pm.environment.set(\"userEntityId\", jsonData.user_id);",
                  "        console.log('Set userId and userEntityId:', jsonData.user_id);",
                  "    }",
                  "    ",
                  "    if (jsonData.role) {",
                  "        pm.environment.set(\"userRole\", jsonData.role);",
                  "        console.log('Set userRole:', jsonData.role);",
                  "    }",
                  "} catch (e) {",
                  "    console.error('Error parsing response as JSON:', e.message);",
                  "    console.log('Response body:', pm.response.text());",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/x-www-form-urlencoded"
              }
            ],
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "key": "username",
                  "value": "admin@example.com",
                  "type": "text"
                },
                {
                  "key": "password",
                  "value": "admin123",
                  "type": "text"
                }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/auth/login",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "auth",
                "login"
              ]
            },
            "description": "Login to get authentication token"
          },
          "response": []
        },
        {
          "name": "Refresh Token",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"refresh_token\": \"{{refreshToken}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/auth/refresh",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "auth",
                "refresh"
              ]
            },
            "description": "Refresh authentication token"
          },
          "response": []
        },
        {
          "name": "Doctor Signup",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// Check if the response is valid JSON",
                  "try {",
                  "    var jsonData = pm.response.json();",
                  "    console.log('Response data:', jsonData);",
                  "    ",
                  "    // Set environment variables if the response contains the expected fields",
                  "    if (jsonData.access_token) {",
                  "        pm.environment.set(\"authToken\", jsonData.access_token);",
                  "        console.log('Set authToken:', jsonData.access_token);",
                  "    } else {",
                  "        console.error('access_token not found in response');",
                  "    }",
                  "    ",
                  "    if (jsonData.refresh_token) {",
                  "        pm.environment.set(\"refreshToken\", jsonData.refresh_token);",
                  "        console.log('Set refreshToken:', jsonData.refresh_token);",
                  "    }",
                  "    ",
                  "    if (jsonData.user_id) {",
                  "        pm.environment.set(\"userId\", jsonData.user_id);",
                  "        pm.environment.set(\"doctorId\", jsonData.user_id);",
                  "        pm.environment.set(\"userEntityId\", jsonData.user_id);",
                  "        console.log('Set userId, doctorId, and userEntityId:', jsonData.user_id);",
                  "    }",
                  "    ",
                  "    if (jsonData.role) {",
                  "        pm.environment.set(\"userRole\", jsonData.role);",
                  "        console.log('Set userRole:', jsonData.role);",
                  "    }",
                  "} catch (e) {",
                  "    console.error('Error parsing response as JSON:', e.message);",
                  "    console.log('Response body:', pm.response.text());",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Dr. John Smith\",\n  \"email\": \"doctor@example.com\",\n  \"password\": \"doctor123\",\n  \"contact\": \"+1234567890\",\n  \"designation\": \"Cardiologist\",\n  \"experience\": 10,\n  \"details\": \"Specializes in heart conditions\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/auth/doctor-signup",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "auth",
                "doctor-signup"
              ]
            },
            "description": "Register a new doctor"
          },
          "response": []
        },
        {
          "name": "Patient Signup",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// Check if the response is valid JSON",
                  "try {",
                  "    var jsonData = pm.response.json();",
                  "    console.log('Response data:', jsonData);",
                  "    ",
                  "    // Set environment variables if the response contains the expected fields",
                  "    if (jsonData.access_token) {",
                  "        pm.environment.set(\"authToken\", jsonData.access_token);",
                  "        console.log('Set authToken:', jsonData.access_token);",
                  "    } else {",
                  "        console.error('access_token not found in response');",
                  "    }",
                  "    ",
                  "    if (jsonData.refresh_token) {",
                  "        pm.environment.set(\"refreshToken\", jsonData.refresh_token);",
                  "        console.log('Set refreshToken:', jsonData.refresh_token);",
                  "    }",
                  "    ",
                  "    if (jsonData.user_id) {",
                  "        pm.environment.set(\"userId\", jsonData.user_id);",
                  "        pm.environment.set(\"patientId\", jsonData.user_id);",
                  "        pm.environment.set(\"userEntityId\", jsonData.user_id);",
                  "        console.log('Set userId, patientId, and userEntityId:', jsonData.user_id);",
                  "    }",
                  "    ",
                  "    if (jsonData.role) {",
                  "        pm.environment.set(\"userRole\", jsonData.role);",
                  "        console.log('Set userRole:', jsonData.role);",
                  "    }",
                  "} catch (e) {",
                  "    console.error('Error parsing response as JSON:', e.message);",
                  "    console.log('Response body:', pm.response.text());",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Jane Doe\",\n  \"email\": \"patient@example.com\",\n  \"password\": \"patient123\",\n  \"contact\": \"+1987654321\",\n  \"age\": 35,\n  \"gender\": \"female\",\n  \"address\": \"123 Main St, Anytown, USA\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/auth/patient-signup",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "auth",
                "patient-signup"
              ]
            },
            "description": "Register a new patient"
          },
          "response": []
        },
        {
          "name": "Hospital Signup",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// Check if the response is valid JSON",
                  "try {",
                  "    var jsonData = pm.response.json();",
                  "    console.log('Response data:', jsonData);",
                  "    ",
                  "    // Set environment variables if the response contains the expected fields",
                  "    if (jsonData.access_token) {",
                  "        pm.environment.set(\"authToken\", jsonData.access_token);",
                  "        console.log('Set authToken:', jsonData.access_token);",
                  "    } else {",
                  "        console.error('access_token not found in response');",
                  "    }",
                  "    ",
                  "    if (jsonData.refresh_token) {",
                  "        pm.environment.set(\"refreshToken\", jsonData.refresh_token);",
                  "        console.log('Set refreshToken:', jsonData.refresh_token);",
                  "    }",
                  "    ",
                  "    if (jsonData.user_id) {",
                  "        pm.environment.set(\"userId\", jsonData.user_id);",
                  "        pm.environment.set(\"hospitalId\", jsonData.user_id);",
                  "        pm.environment.set(\"userEntityId\", jsonData.user_id);",
                  "        console.log('Set userId, hospitalId, and userEntityId:', jsonData.user_id);",
                  "    }",
                  "    ",
                  "    if (jsonData.role) {",
                  "        pm.environment.set(\"userRole\", jsonData.role);",
                  "        console.log('Set userRole:', jsonData.role);",
                  "    }",
                  "} catch (e) {",
                  "    console.error('Error parsing response as JSON:', e.message);",
                  "    console.log('Response body:', pm.response.text());",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"General Hospital\",\n  \"email\": \"hospital@example.com\",\n  \"password\": \"hospital123\",\n  \"contact\": \"+1122334455\",\n  \"address\": \"456 Hospital Ave, Medtown, USA\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/auth/hospital-signup",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "auth",
                "hospital-signup"
              ]
            },
            "description": "Register a new hospital"
          },
          "response": []
        },
        {
          "name": "Admin Create User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"New User\",\n  \"email\": \"newuser@example.com\",\n  \"password\": \"password123\",\n  \"role\": \"admin\",\n  \"contact\": \"+1234567890\",\n  \"address\": \"123 New User St, Anytown, USA\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/auth/signup",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "auth",
                "signup"
              ]
            },
            "description": "Create a new user (admin only)"
          },
          "response": []
        },
        {
          "name": "Admin Signup",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// Check if the response is valid JSON",
                  "try {",
                  "    var jsonData = pm.response.json();",
                  "    console.log('Response data:', jsonData);",
                  "    ",
                  "    // Set environment variables if the response contains the expected fields",
                  "    if (jsonData.access_token) {",
                  "        pm.environment.set(\"authToken\", jsonData.access_token);",
                  "        console.log('Set authToken:', jsonData.access_token);",
                  "    } else {",
                  "        console.error('access_token not found in response');",
                  "    }",
                  "    ",
                  "    if (jsonData.refresh_token) {",
                  "        pm.environment.set(\"refreshToken\", jsonData.refresh_token);",
                  "        console.log('Set refreshToken:', jsonData.refresh_token);",
                  "    }",
                  "    ",
                  "    if (jsonData.user_id) {",
                  "        pm.environment.set(\"userId\", jsonData.user_id);",
                  "        pm.environment.set(\"userEntityId\", jsonData.user_id);",
                  "        console.log('Set userId and userEntityId:', jsonData.user_id);",
                  "    }",
                  "    ",
                  "    if (jsonData.role) {",
                  "        pm.environment.set(\"userRole\", jsonData.role);",
                  "        console.log('Set userRole:', jsonData.role);",
                  "    }",
                  "} catch (e) {",
                  "    console.error('Error parsing response as JSON:', e.message);",
                  "    console.log('Response body:', pm.response.text());",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Admin User\",\n  \"email\": \"admin@example.com\",\n  \"password\": \"admin123\",\n  \"contact\": \"+1234567890\",\n  \"address\": \"123 Admin St, Anytown, USA\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/auth/admin-signup",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "auth",
                "admin-signup"
              ]
            },
            "description": "Create a new admin user (public endpoint)"
          },
          "response": []
        }
      ],
      "description": "Authentication endpoints for login, signup, and token refresh"
    },
    {
      "name": "Users",
      "item": [
        {
          "name": "Get All Users",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/users",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "users"
              ]
            },
            "description": "Get all users (admin only)"
          },
          "response": []
        },
        {
          "name": "Get User by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/users/{{userId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "users",
                "{{userId}}"
              ]
            },
            "description": "Get user by ID"
          },
          "response": []
        },
        {
          "name": "Update User",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Updated Name\",\n  \"contact\": \"+1234567890\",\n  \"address\": \"Updated Address\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/users/{{userId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "users",
                "{{userId}}"
              ]
            },
            "description": "Update user profile"
          },
          "response": []
        },
        {
          "name": "Get Current User Profile",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/users/me",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "users",
                "me"
              ]
            },
            "description": "Get the profile of the currently logged-in user"
          },
          "response": []
        },
        {
          "name": "Update Current User Profile",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"My Updated Name\",\n  \"contact\": \"+1234567890\",\n  \"address\": \"My Updated Address\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/users/me",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "users",
                "me"
              ]
            },
            "description": "Update the profile of the currently logged-in user"
          },
          "response": []
        }
      ],
      "description": "User management endpoints"
    },
    {
      "name": "Hospitals",
      "item": [
        {
          "name": "Get All Hospitals",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/hospitals",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "hospitals"
              ]
            },
            "description": "Get all hospitals"
          },
          "response": []
        },
        {
          "name": "Get Hospital by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/hospitals/{{hospitalId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "hospitals",
                "{{hospitalId}}"
              ]
            },
            "description": "Get hospital by ID"
          },
          "response": []
        },
        {
          "name": "Create Hospital",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"New Hospital\",\n  \"email\": \"new.hospital@example.com\",\n  \"contact\": \"+1122334455\",\n  \"address\": \"789 Hospital Blvd, Medtown, USA\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/hospitals",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "hospitals"
              ]
            },
            "description": "Create a new hospital (admin only)"
          },
          "response": []
        },
        {
          "name": "Update Hospital",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Updated Hospital Name\",\n  \"contact\": \"+1122334455\",\n  \"address\": \"Updated Hospital Address\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/hospitals/{{hospitalId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "hospitals",
                "{{hospitalId}}"
              ]
            },
            "description": "Update hospital information (admin only)"
          },
          "response": []
        },
        {
          "name": "Get Hospital Patients",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/hospitals/{{hospitalId}}/patients",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "hospitals",
                "{{hospitalId}}",
                "patients"
              ]
            },
            "description": "Get all patients in a hospital"
          },
          "response": []
        },
        {
          "name": "Get Hospital Doctors",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/hospitals/{{hospitalId}}/doctors",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "hospitals",
                "{{hospitalId}}",
                "doctors"
              ]
            },
            "description": "Get all doctors in a hospital"
          },
          "response": []
        }
      ],
      "description": "Hospital management endpoints"
    },
    {
      "name": "Doctors",
      "item": [
        {
          "name": "Get All Doctors",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/doctors",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "doctors"
              ]
            },
            "description": "Get all doctors"
          },
          "response": []
        },
        {
          "name": "Get Doctor by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/doctors/{{doctorId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "doctors",
                "{{doctorId}}"
              ]
            },
            "description": "Get doctor by ID"
          },
          "response": []
        },
        {
          "name": "Update Doctor",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Updated Doctor Name\",\n  \"designation\": \"Updated Designation\",\n  \"experience\": 12,\n  \"details\": \"Updated doctor details\",\n  \"contact\": \"+1234567890\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/doctors/{{doctorId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "doctors",
                "{{doctorId}}"
              ]
            },
            "description": "Update doctor profile"
          },
          "response": []
        },
        {
          "name": "Get Doctor Patients",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/doctors/{{doctorId}}/patients",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "doctors",
                "{{doctorId}}",
                "patients"
              ]
            },
            "description": "Get all patients for a doctor"
          },
          "response": []
        },
        {
          "name": "Get Doctor Hospitals",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/doctors/{{doctorId}}/hospitals",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "doctors",
                "{{doctorId}}",
                "hospitals"
              ]
            },
            "description": "Get all hospitals for a doctor"
          },
          "response": []
        }
      ],
      "description": "Doctor management endpoints"
    },
    {
      "name": "Patients",
      "item": [
        {
          "name": "Get All Patients",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/patients",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "patients"
              ]
            },
            "description": "Get all patients (admin only)"
          },
          "response": []
        },
        {
          "name": "Get Patient by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/patients/{{patientId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "patients",
                "{{patientId}}"
              ]
            },
            "description": "Get patient by ID"
          },
          "response": []
        },
        {
          "name": "Get Patient Doctors",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/patients/{{patientId}}/doctors",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "patients",
                "{{patientId}}",
                "doctors"
              ]
            },
            "description": "Get all doctors for a patient. Accessible by admins, doctors treating the patient, and users with patient role who have a relation to the patient."
          },
          "response": []
        },
        {
          "name": "Get Patient Hospitals",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/patients/{{patientId}}/hospitals",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "patients",
                "{{patientId}}",
                "hospitals"
              ]
            },
            "description": "Get all hospitals for a patient. Accessible by admins, doctors treating the patient, and users with patient role who have a relation to the patient."
          },
          "response": []
        },
        {
          "name": "Update Patient",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Updated Patient Name\",\n  \"age\": 36,\n  \"gender\": \"female\",\n  \"contact\": \"+1987654321\",\n  \"address\": \"Updated Patient Address\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/patients/{{patientId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "patients",
                "{{patientId}}"
              ]
            },
            "description": "Update patient profile"
          },
          "response": []
        },
        {
          "name": "Get Patient Case History",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/patients/{{patientId}}/case-history",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "patients",
                "{{patientId}}",
                "case-history"
              ]
            },
            "description": "Get the medical case history for a specific patient."
          },
          "response": []
        },
        {
          "name": "Get Patient Case History (Create if not exists)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/patients/{{patientId}}/case-history?create_if_not_exists=true",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "patients",
                "{{patientId}}",
                "case-history"
              ],
              "query": [
                {
                  "key": "create_if_not_exists",
                  "value": "true"
                }
              ]
            },
            "description": "Get the medical case history for a specific patient. If no case history exists, a new empty one will be created."
          },
          "response": []
        },
        {
          "name": "Create Patient Case History",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"patient_id\": \"{{patientId}}\",\n  \"summary\": \"Initial consultation for hypertension\",\n  \"documents\": [\"doc123\", \"doc456\"]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/patients/{{patientId}}/case-history",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "patients",
                "{{patientId}}",
                "case-history"
              ]
            },
            "description": "Create a new case history for a patient."
          },
          "response": []
        },
        {
          "name": "Update Patient Case History",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"summary\": \"Updated consultation notes for hypertension\",\n  \"documents\": [\"doc123\", \"doc456\", \"doc789\"]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/patients/{{patientId}}/case-history",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "patients",
                "{{patientId}}",
                "case-history"
              ]
            },
            "description": "Update an existing case history for a patient."
          },
          "response": []
        },
        {
          "name": "Get Patient Documents",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/patients/{{patientId}}/documents",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "patients",
                "{{patientId}}",
                "documents"
              ]
            },
            "description": "Get all documents for a specific patient."
          },
          "response": []
        },
        {
          "name": "Get Patient Reports",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/patients/{{patientId}}/reports",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "patients",
                "{{patientId}}",
                "reports"
              ]
            },
            "description": "Get all reports for a specific patient."
          },
          "response": []
        },
        {
          "name": "Get Patient Report by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/patients/{{patientId}}/reports/{{reportId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "patients",
                "{{patientId}}",
                "reports",
                "{{reportId}}"
              ]
            },
            "description": "Get a specific report for a patient."
          },
          "response": []
        },
        {
          "name": "Create Patient Report",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Blood Test Results\",\n  \"description\": \"Complete blood count and metabolic panel\",\n  \"report_type\": \"lab_test\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/patients/{{patientId}}/reports",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "patients",
                "{{patientId}}",
                "reports"
              ]
            },
            "description": "Create a new report for a patient."
          },
          "response": []
        },
        {
          "name": "Update Patient Report",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Updated Blood Test Results\",\n  \"description\": \"Updated complete blood count and metabolic panel\",\n  \"report_type\": \"lab_test\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/patients/{{patientId}}/reports/{{reportId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "patients",
                "{{patientId}}",
                "reports",
                "{{reportId}}"
              ]
            },
            "description": "Update an existing report for a patient."
          },
          "response": []
        },
        {
          "name": "Upload Report Document",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "file",
                  "type": "file",
                  "src": "/path/to/your/file.pdf"
                },
                {
                  "key": "remark",
                  "value": "Lab results from City Hospital",
                  "type": "text"
                }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/patients/{{patientId}}/reports/{{reportId}}/documents",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "patients",
                "{{patientId}}",
                "reports",
                "{{reportId}}",
                "documents"
              ]
            },
            "description": "Upload a document for a patient's report."
          },
          "response": []
        },
        {
          "name": "Upload Case History Document",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "file",
                  "type": "file",
                  "src": "/path/to/your/file.pdf"
                },
                {
                  "key": "remark",
                  "value": "Medical history document",
                  "type": "text"
                },
                {
                  "key": "case_history_id",
                  "value": "{{caseHistoryId}}",
                  "type": "text"
                }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/patients/{{patientId}}/case-history/documents",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "patients",
                "{{patientId}}",
                "case-history",
                "documents"
              ]
            },
            "description": "Upload a document for a patient's case history"
          },
          "response": []
        },
        {
          "name": "Get Patient Documents",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/patients/{{patientId}}/documents",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "patients",
                "{{patientId}}",
                "documents"
              ]
            },
            "description": "Get all documents for a patient across all case histories"
          },
          "response": []
        },
        {
          "name": "Get User Patients",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/patients/user/{{userId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "patients",
                "user",
                "{{userId}}"
              ]
            },
            "description": "Get all patients linked to a user through user-patient relations. The response includes patient information (id, name, gender, dob, contact, photo, relation) without chat information, as a patient can have multiple chats."
          },
          "response": []
        }
      ],
      "description": "Patient management endpoints"
    },
    {
      "name": "Mappings",
      "item": [
        {
          "name": "Map Hospital to Doctor",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"hospital_id\": \"{{hospitalId}}\",\n  \"doctor_id\": \"{{doctorId}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/mappings/hospital-doctor",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "mappings",
                "hospital-doctor"
              ]
            },
            "description": "Map a hospital to a doctor (admin only)"
          },
          "response": []
        },
        {
          "name": "Delete Hospital-Doctor Mapping",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/mappings/hospital-doctor/{{mappingId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "mappings",
                "hospital-doctor",
                "{{mappingId}}"
              ]
            },
            "description": "Delete a mapping between a hospital and a doctor (admin only)"
          },
          "response": []
        },
        {
          "name": "Map Hospital to Patient",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"hospital_id\": \"{{hospitalId}}\",\n  \"patient_id\": \"{{patientId}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/mappings/hospital-patient",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "mappings",
                "hospital-patient"
              ]
            },
            "description": "Map a hospital to a patient (admin only)"
          },
          "response": []
        },
        {
          "name": "Delete Hospital-Patient Mapping",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/mappings/hospital-patient/{{mappingId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "mappings",
                "hospital-patient",
                "{{mappingId}}"
              ]
            },
            "description": "Delete a mapping between a hospital and a patient (admin only)"
          },
          "response": []
        },
        {
          "name": "Map Doctor to Patient",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"doctor_id\": \"{{doctorId}}\",\n  \"patient_id\": \"{{patientId}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/mappings/doctor-patient",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "mappings",
                "doctor-patient"
              ]
            },
            "description": "Map a doctor to a patient (admin only)"
          },
          "response": []
        },
        {
          "name": "Delete Doctor-Patient Mapping",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/mappings/doctor-patient/{{mappingId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "mappings",
                "doctor-patient",
                "{{mappingId}}"
              ]
            },
            "description": "Delete a mapping between a doctor and a patient (admin only)"
          },
          "response": []
        },
        {
          "name": "Create User-Patient Relation",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"user_id\": \"{{userId}}\",\n  \"patient_id\": \"{{patientId}}\",\n  \"relation\": \"self\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/mappings/user-patient",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "mappings",
                "user-patient"
              ]
            },
            "description": "Create a relation between a user and a patient"
          },
          "response": []
        },
        {
          "name": "Update User-Patient Relation",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"relation\": \"child\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/mappings/user-patient/{{mappingId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "mappings",
                "user-patient",
                "{{mappingId}}"
              ]
            },
            "description": "Update a relation between a user and a patient"
          },
          "response": []
        },
        {
          "name": "Delete User-Patient Relation",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/mappings/user-patient/{{mappingId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "mappings",
                "user-patient",
                "{{mappingId}}"
              ]
            },
            "description": "Delete a relation between a user and a patient"
          },
          "response": []
        },
        {
          "name": "Get User Patients",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/mappings/user/{{userId}}/patients",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "mappings",
                "user",
                "{{userId}}",
                "patients"
              ]
            },
            "description": "Get all patients related to a user through user-patient relations. The response includes patient information (id, name, gender, dob, contact, photo, relation) without chat information, as a patient can have multiple chats."
          },
          "response": []
        }
      ],
      "description": "Mapping endpoints for connecting entities"
    },
    {
      "name": "Chats",
      "item": [
        {
          "name": "Get All Chats",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/chats",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "chats"
              ]
            },
            "description": "Get all chats for the current user"
          },
          "response": []
        },
        {
          "name": "Get Chat by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "user-entity-id",
                "value": "{{userEntityId}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/chats/{{chatId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "chats",
                "{{chatId}}"
              ]
            },
            "description": "Get chat by ID"
          },
          "response": []
        },
        {
          "name": "Create Chat",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// Check if the response is valid JSON",
                  "try {",
                  "    var jsonData = pm.response.json();",
                  "    console.log('Response data:', jsonData);",
                  "    ",
                  "    // Set environment variables if the response contains the expected fields",
                  "    if (jsonData.id) {",
                  "        pm.environment.set(\"chatId\", jsonData.id);",
                  "        console.log('Set chatId:', jsonData.id);",
                  "    } else {",
                  "        console.error('id not found in response');",
                  "    }",
                  "} catch (e) {",
                  "    console.error('Error parsing response as JSON:', e.message);",
                  "    console.log('Response body:', pm.response.text());",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"doctor_id\": \"{{doctorId}}\",\n  \"patient_id\": \"{{patientId}}\",\n  \"is_active_for_doctor\": true,\n  \"is_active_for_patient\": true\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/chats",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "chats"
              ]
            },
            "description": "Create a new chat (admin only)"
          },
          "response": []
        },
        {
          "name": "Get Chat Messages",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "user-entity-id",
                "value": "{{userEntityId}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/chats/{{chatId}}/messages",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "chats",
                "{{chatId}}",
                "messages"
              ]
            },
            "description": "Get all messages for a chat"
          },
          "response": []
        },
        {
          "name": "Get Patient Chats",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "user-entity-id",
                "value": "{{userEntityId}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/chats/patient/{{patientId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "chats",
                "patient",
                "{{patientId}}"
              ]
            },
            "description": "Get all chats where a specific patient is a participant. Access is restricted to admins, the patient themselves, and doctors who have a chat with this patient."
          },
          "response": []
        },
        {
          "name": "Get Doctor Chats",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "user-entity-id",
                "value": "{{userEntityId}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/chats/doctor/{{doctorId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "chats",
                "doctor",
                "{{doctorId}}"
              ]
            },
            "description": "Get all chats where a specific doctor is a participant. Access is restricted to admins, the doctor themselves, and patients who have a chat with this doctor."
          },
          "response": []
        },
        {
          "name": "Deactivate Chat for Doctor",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/chats/{{chatId}}/deactivate-for-doctor",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "chats",
                "{{chatId}}",
                "deactivate-for-doctor"
              ]
            },
            "description": "Deactivate a chat for the doctor. Only accessible by admins and the doctor in the chat."
          },
          "response": []
        },
        {
          "name": "Deactivate Chat for Patient",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/chats/{{chatId}}/deactivate-for-patient",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "chats",
                "{{chatId}}",
                "deactivate-for-patient"
              ]
            },
            "description": "Deactivate a chat for the patient. Only accessible by admins and the patient in the chat."
          },
          "response": []
        },
        {
          "name": "Activate Chat for Doctor",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/chats/{{chatId}}/activate-for-doctor",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "chats",
                "{{chatId}}",
                "activate-for-doctor"
              ]
            },
            "description": "Activate a chat for the doctor. Only accessible by admins and the doctor in the chat."
          },
          "response": []
        },
        {
          "name": "Activate Chat for Patient",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/chats/{{chatId}}/activate-for-patient",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "chats",
                "{{chatId}}",
                "activate-for-patient"
              ]
            },
            "description": "Activate a chat for the patient. Only accessible by admins and the patient in the chat."
          },
          "response": []
        },
        {
          "name": "Delete Chat",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/chats/{{chatId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "chats",
                "{{chatId}}"
              ]
            },
            "description": "Delete a chat (admin only)"
          },
          "response": []
        }
      ],
      "description": "Chat management endpoints for communication between users"
    },
    {
      "name": "Appointments",
      "item": [
        {
          "name": "Create Appointment",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// Check if the response is valid JSON",
                  "try {",
                  "    var jsonData = pm.response.json();",
                  "    console.log('Response data:', jsonData);",
                  "    ",
                  "    // Set environment variables if the response contains the expected fields",
                  "    if (jsonData.id) {",
                  "        pm.environment.set(\"appointmentId\", jsonData.id);",
                  "        console.log('Set appointmentId:', jsonData.id);",
                  "    } else {",
                  "        console.error('id not found in response');",
                  "    }",
                  "} catch (e) {",
                  "    console.error('Error parsing response as JSON:', e.message);",
                  "    console.log('Response body:', pm.response.text());",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"doctor_id\": \"{{doctorId}}\",\n  \"patient_id\": \"{{patientId}}\",\n  \"hospital_id\": \"{{hospitalId}}\",\n  \"time_slot\": \"2023-12-01T10:00:00Z\",\n  \"type\": \"in_person\",\n  \"extras\": {\n    \"notes\": \"Initial consultation\",\n    \"symptoms\": \"Fever, cough\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/appointments",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "appointments"
              ]
            },
            "description": "Create a new appointment"
          },
          "response": []
        },
        {
          "name": "Get All Appointments",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/appointments",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "appointments"
              ]
            },
            "description": "Get all appointments (admin only)"
          },
          "response": []
        },
        {
          "name": "Get Appointment by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/appointments/{{appointmentId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "appointments",
                "{{appointmentId}}"
              ]
            },
            "description": "Get appointment details"
          },
          "response": []
        },
        {
          "name": "Update Appointment",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"time_slot\": \"2023-12-02T11:00:00Z\",\n  \"type\": \"virtual\",\n  \"extras\": {\n    \"notes\": \"Rescheduled appointment\",\n    \"symptoms\": \"Fever, cough, headache\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/appointments/{{appointmentId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "appointments",
                "{{appointmentId}}"
              ]
            },
            "description": "Update appointment"
          },
          "response": []
        },
        {
          "name": "Cancel Appointment",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/appointments/{{appointmentId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "appointments",
                "{{appointmentId}}"
              ]
            },
            "description": "Cancel appointment"
          },
          "response": []
        },
        {
          "name": "Cancel Appointment with Reason",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"cancellation_reason\": \"Patient requested cancellation due to scheduling conflict\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/appointments/{{appointmentId}}/cancel",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "appointments",
                "{{appointmentId}}",
                "cancel"
              ]
            },
            "description": "Cancel appointment with reason"
          },
          "response": []
        },
        {
          "name": "Update Appointment Status",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"completed\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/appointments/{{appointmentId}}/status",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "appointments",
                "{{appointmentId}}",
                "status"
              ]
            },
            "description": "Update appointment status"
          },
          "response": []
        },
        {
          "name": "Get Doctor Appointments",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/appointments/doctor/{{doctorId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "appointments",
                "doctor",
                "{{doctorId}}"
              ]
            },
            "description": "Get all appointments for a doctor"
          },
          "response": []
        },
        {
          "name": "Get Patient Appointments",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/appointments/patient/{{patientId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "appointments",
                "patient",
                "{{patientId}}"
              ]
            },
            "description": "Get all appointments for a patient"
          },
          "response": []
        },
        {
          "name": "Get Hospital Appointments",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/appointments/hospital/{{hospitalId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "appointments",
                "hospital",
                "{{hospitalId}}"
              ]
            },
            "description": "Get all appointments for a hospital"
          },
          "response": []
        }
      ],
      "description": "Appointment management endpoints"
    },
    {
      "name": "Messages",
      "item": [
        {
          "name": "Send Message",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "// Set the correct receiver ID based on the user's role",
                  "const userRole = pm.environment.get('userRole');",
                  "const doctorId = pm.environment.get('doctorId');",
                  "const patientId = pm.environment.get('patientId');",
                  "",
                  "// If the user is a doctor, set the receiver to the patient",
                  "if (userRole === 'doctor') {",
                  "    pm.environment.set('receiverId', patientId);",
                  "    console.log('Set receiverId to patientId:', patientId);",
                  "}",
                  "// If the user is a patient, set the receiver to the doctor",
                  "else if (userRole === 'patient') {",
                  "    pm.environment.set('receiverId', doctorId);",
                  "    console.log('Set receiverId to doctorId:', doctorId);",
                  "}",
                  "// If the user is an admin, they can send to either",
                  "else if (userRole === 'admin') {",
                  "    // Default to sending to the doctor",
                  "    pm.environment.set('receiverId', doctorId);",
                  "    console.log('Set receiverId to doctorId (admin default):', doctorId);",
                  "}"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// Check if the response is valid JSON",
                  "try {",
                  "    var jsonData = pm.response.json();",
                  "    console.log('Response data:', jsonData);",
                  "    ",
                  "    // Set environment variables if the response contains the expected fields",
                  "    if (jsonData.id) {",
                  "        pm.environment.set(\"messageId\", jsonData.id);",
                  "        console.log('Set messageId:', jsonData.id);",
                  "    } else {",
                  "        console.error('id not found in response');",
                  "    }",
                  "} catch (e) {",
                  "    console.error('Error parsing response as JSON:', e.message);",
                  "    console.log('Response body:', pm.response.text());",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "user-entity-id",
                "value": "{{userEntityId}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"chat_id\": \"{{chatId}}\",\n  \"sender_id\": \"{{userEntityId}}\",\n  \"receiver_id\": \"{{receiverId}}\",\n  \"message\": \"Hello, this is a test message.\",\n  \"message_type\": \"text\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/messages",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "messages"
              ]
            },
            "description": "Send a new message"
          },
          "response": []
        },
        {
          "name": "Update Read Status (Multiple)",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"message_ids\": [\"{{messageId}}\"],\n  \"is_read\": true\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/messages/read-status",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "messages",
                "read-status"
              ]
            },
            "description": "Update read status for multiple messages"
          },
          "response": []
        },
        {
          "name": "Update Read Status (Single)",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/messages/{{messageId}}/read?is_read=true",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "messages",
                "{{messageId}}",
                "read"
              ],
              "query": [
                {
                  "key": "is_read",
                  "value": "true"
                }
              ]
            },
            "description": "Update read status for a single message"
          },
          "response": []
        },
        {
          "name": "Get Messages by Chat ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/messages/chat/{{chatId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "messages",
                "chat",
                "{{chatId}}"
              ]
            },
            "description": "Get all messages for a chat"
          },
          "response": []
        }
      ],
      "description": "Message management endpoints"
    },
    {
      "name": "Suggestions",
      "item": [
        {
          "name": "Create Suggestion",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// Check if the response is valid JSON",
                  "try {",
                  "    var jsonData = pm.response.json();",
                  "    console.log('Response data:', jsonData);",
                  "    ",
                  "    // Set environment variables if the response contains the expected fields",
                  "    if (jsonData.id) {",
                  "        pm.environment.set(\"suggestionId\", jsonData.id);",
                  "        console.log('Set suggestionId:', jsonData.id);",
                  "    } else {",
                  "        console.error('id not found in response');",
                  "    }",
                  "} catch (e) {",
                  "    console.error('Error parsing response as JSON:', e.message);",
                  "    console.log('Response body:', pm.response.text());",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"problem\": \"Persistent Headache\",\n  \"description\": \"Patient complains of persistent headache for more than 3 days\",\n  \"doctor_id\": \"{{doctorId}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/suggestions",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "suggestions"
              ]
            },
            "description": "Create a new suggestion (doctor only)"
          },
          "response": []
        },
        {
          "name": "Get All Suggestions",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/suggestions",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "suggestions"
              ]
            },
            "description": "Get all suggestions (admin only)"
          },
          "response": []
        },
        {
          "name": "Get Doctor Suggestions",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/suggestions?doctor_id={{doctorId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "suggestions"
              ],
              "query": [
                {
                  "key": "doctor_id",
                  "value": "{{doctorId}}"
                }
              ]
            },
            "description": "Get all suggestions for a specific doctor"
          },
          "response": []
        },
        {
          "name": "Get Suggestion by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/suggestions/{{suggestionId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "suggestions",
                "{{suggestionId}}"
              ]
            },
            "description": "Get suggestion details"
          },
          "response": []
        },
        {
          "name": "Update Suggestion",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"problem\": \"Severe Headache\",\n  \"description\": \"Patient complains of severe headache for more than 3 days with sensitivity to light\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/suggestions/{{suggestionId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "suggestions",
                "{{suggestionId}}"
              ]
            },
            "description": "Update suggestion"
          },
          "response": []
        },
        {
          "name": "Delete Suggestion",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/suggestions/{{suggestionId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "suggestions",
                "{{suggestionId}}"
              ]
            },
            "description": "Delete suggestion"
          },
          "response": []
        }
      ],
      "description": "Suggestion management endpoints"
    },
    {
      "name": "AI Assistant",
      "item": [
        {
          "name": "Create AI Session",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// Check if the response is valid JSON",
                  "try {",
                  "    var jsonData = pm.response.json();",
                  "    console.log('Response data:', jsonData);",
                  "    ",
                  "    // Set environment variables if the response contains the expected fields",
                  "    if (jsonData.id) {",
                  "        pm.environment.set(\"aiSessionId\", jsonData.id);",
                  "        console.log('Set aiSessionId:', jsonData.id);",
                  "    } else {",
                  "        console.error('id not found in response');",
                  "    }",
                  "} catch (e) {",
                  "    console.error('Error parsing response as JSON:', e.message);",
                  "    console.log('Response body:', pm.response.text());",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"chat_id\": \"{{chatId}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/ai/sessions",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "ai",
                "sessions"
              ]
            },
            "description": "Create a new AI session"
          },
          "response": []
        },
        {
          "name": "Send Message to AI",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"session_id\": \"{{aiSessionId}}\",\n  \"message\": \"What are the symptoms of the flu?\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/ai/messages",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "ai",
                "messages"
              ]
            },
            "description": "Send a message to the AI assistant"
          },
          "response": []
        },
        {
          "name": "Get AI Session Messages",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/ai/sessions/{{aiSessionId}}/messages",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "ai",
                "sessions",
                "{{aiSessionId}}",
                "messages"
              ]
            },
            "description": "Get all messages for an AI session"
          },
          "response": []
        },
        {
          "name": "End AI Session",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/ai/sessions/{{aiSessionId}}/end",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "ai",
                "sessions",
                "{{aiSessionId}}",
                "end"
              ]
            },
            "description": "End an AI session"
          },
          "response": []
        },
        {
          "name": "Update AI Session Summary",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"session_id\": \"{{aiSessionId}}\",\n  \"summary\": \"Patient reports flu-like symptoms including fever, sore throat, and fatigue for the past 3 days. No significant medical history. Currently taking over-the-counter pain relievers.\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/ai/sessions/{{aiSessionId}}/summary",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "ai",
                "sessions",
                "{{aiSessionId}}",
                "summary"
              ]
            },
            "description": "Update the summary for an AI session"
          },
          "response": []
        },
        {
          "name": "Generate Suggested Response",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"session_id\": \"{{aiSessionId}}\",\n  \"summary\": \"Patient reports flu-like symptoms including fever, sore throat, and fatigue for the past 3 days. No significant medical history. Currently taking over-the-counter pain relievers.\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/ai/suggested-response",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "ai",
                "suggested-response"
              ]
            },
            "description": "Generate a suggested response for a doctor based on a patient summary"
          },
          "response": []
        }
      ],
      "description": "AI assistant endpoints for communication with the AI"
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:8000"
    },
    {
      "key": "reportId",
      "value": "",
      "type": "string",
      "description": "ID of a report"
    }
  ]
}